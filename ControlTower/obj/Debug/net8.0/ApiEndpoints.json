[
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.AccessLevelController",
    "Method": "GetAccessLevels",
    "RelativePath": "api/AccessLevel",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.EmployeeManagementSystem.AccessLevelDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.AccessLevelController",
    "Method": "PostAccessLevel",
    "RelativePath": "api/AccessLevel",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.CreateAccessLevelDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.Models.EmployeeManagementSystem.AccessLevel",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.AccessLevelController",
    "Method": "GetAccessLevel",
    "RelativePath": "api/AccessLevel/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.AccessLevelDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.AccessLevelController",
    "Method": "PutAccessLevel",
    "RelativePath": "api/AccessLevel/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.UpdateAccessLevelDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.AccessLevelController",
    "Method": "DeleteAccessLevel",
    "RelativePath": "api/AccessLevel/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.ApplicationController",
    "Method": "GetApplications",
    "RelativePath": "api/Application",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.EmployeeManagementSystem.ApplicationDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.ApplicationController",
    "Method": "PostApplication",
    "RelativePath": "api/Application",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createApplicationDto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.CreateApplicationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.ApplicationDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.ApplicationController",
    "Method": "GetApplication",
    "RelativePath": "api/Application/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.ApplicationDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.ApplicationController",
    "Method": "PutApplication",
    "RelativePath": "api/Application/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateApplicationDto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.UpdateApplicationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.ApplicationController",
    "Method": "DeleteApplication",
    "RelativePath": "api/Application/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.AuthController",
    "Method": "SignIn",
    "RelativePath": "api/Auth/signin",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "signInDto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.SignInDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.AuthResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.RoomBookingSystem.BuildingController",
    "Method": "GetBuildings",
    "RelativePath": "api/Building",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.RoomBookingSystem.BuildingDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.RoomBookingSystem.BuildingController",
    "Method": "PostBuilding",
    "RelativePath": "api/Building",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.RoomBookingSystem.CreateBuildingDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.RoomBookingSystem.BuildingDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.RoomBookingSystem.BuildingController",
    "Method": "GetBuilding",
    "RelativePath": "api/Building/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.RoomBookingSystem.BuildingDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.RoomBookingSystem.BuildingController",
    "Method": "PutBuilding",
    "RelativePath": "api/Building/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.RoomBookingSystem.UpdateBuildingDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.RoomBookingSystem.BuildingController",
    "Method": "DeleteBuilding",
    "RelativePath": "api/Building/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.CMMaterialUsedController",
    "Method": "GetCMMaterialUsed",
    "RelativePath": "api/CMMaterialUsed",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.ReportManagementSystem.CMMaterialUsedDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.CMMaterialUsedController",
    "Method": "CreateCMMaterialUsed",
    "RelativePath": "api/CMMaterialUsed",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.CreateCMMaterialUsedDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.CMMaterialUsedDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.CMMaterialUsedController",
    "Method": "GetCMMaterialUsed",
    "RelativePath": "api/CMMaterialUsed/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.CMMaterialUsedDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.CMMaterialUsedController",
    "Method": "UpdateCMMaterialUsed",
    "RelativePath": "api/CMMaterialUsed/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.UpdateCMMaterialUsedDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.CMMaterialUsedController",
    "Method": "DeleteCMMaterialUsed",
    "RelativePath": "api/CMMaterialUsed/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.CMMaterialUsedController",
    "Method": "GetCMMaterialUsedByCMReportForm",
    "RelativePath": "api/CMMaterialUsed/bycmreportform/{cmReportFormId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cmReportFormId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.ReportManagementSystem.CMMaterialUsedDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.CMReportFormController",
    "Method": "GetCMReportForms",
    "RelativePath": "api/CMReportForm",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.ReportManagementSystem.CMReportFormDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.CMReportFormController",
    "Method": "CreateCMReportForm",
    "RelativePath": "api/CMReportForm",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.CreateCMReportFormDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.CMReportFormDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.CMReportFormController",
    "Method": "GetCMReportForm",
    "RelativePath": "api/CMReportForm/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.CMReportFormDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.CMReportFormController",
    "Method": "UpdateCMReportForm",
    "RelativePath": "api/CMReportForm/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.UpdateCMReportFormDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.CMReportFormController",
    "Method": "DeleteCMReportForm",
    "RelativePath": "api/CMReportForm/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.CMReportFormController",
    "Method": "GetCMReportFormsByReportForm",
    "RelativePath": "api/CMReportForm/ByReportForm/{reportFormId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "reportFormId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.ReportManagementSystem.CMReportFormDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.CMReportFormTypeController",
    "Method": "GetCMReportFormTypes",
    "RelativePath": "api/CMReportFormType",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.ReportManagementSystem.CMReportFormTypeDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.CMReportFormTypeController",
    "Method": "CreateCMReportFormType",
    "RelativePath": "api/CMReportFormType",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.CreateCMReportFormTypeDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.CMReportFormTypeDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.CMReportFormTypeController",
    "Method": "GetCMReportFormType",
    "RelativePath": "api/CMReportFormType/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.CMReportFormTypeDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.CMReportFormTypeController",
    "Method": "UpdateCMReportFormType",
    "RelativePath": "api/CMReportFormType/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.UpdateCMReportFormTypeDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.CMReportFormTypeController",
    "Method": "DeleteCMReportFormType",
    "RelativePath": "api/CMReportFormType/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.CompanyController",
    "Method": "GetCompany",
    "RelativePath": "api/Company",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.EmployeeManagementSystem.CompanyDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.CompanyController",
    "Method": "CreateCompany",
    "RelativePath": "api/Company",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createCompanyDto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.CreateCompanyDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.CompanyDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.CompanyController",
    "Method": "GetCompany",
    "RelativePath": "api/Company/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.CompanyDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.CompanyController",
    "Method": "UpdateCompany",
    "RelativePath": "api/Company/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateCompanyDto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.UpdateCompanyDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.CompanyController",
    "Method": "DeleteCompany",
    "RelativePath": "api/Company/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.DepartmentController",
    "Method": "GetDepartments",
    "RelativePath": "api/Department",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.EmployeeManagementSystem.DepartmentDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.DepartmentController",
    "Method": "PostDepartment",
    "RelativePath": "api/Department",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.CreateDepartmentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.DepartmentDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.DepartmentController",
    "Method": "GetDepartment",
    "RelativePath": "api/Department/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.DepartmentDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.DepartmentController",
    "Method": "PutDepartment",
    "RelativePath": "api/Department/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.UpdateDepartmentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.DepartmentController",
    "Method": "DeleteDepartment",
    "RelativePath": "api/Department/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.EmployeeController",
    "Method": "GetUsers",
    "RelativePath": "api/Employee",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.EmployeeManagementSystem.UserDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.EmployeeController",
    "Method": "CreateEmployee",
    "RelativePath": "api/Employee",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "CompanyID",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "SubDepartmentID",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "OccupationID",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "StaffCardID",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "StaffRFIDCardID",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "FirstName",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "LastName",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Email",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "MobileNo",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Gender",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "LoginPassword",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Remark",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "StartWorkingDate",
        "Type": "System.DateTime",
        "IsRequired": false
      },
      {
        "Name": "LastWorkingDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "WorkPermit",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Nationality",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Religion",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "DateOfBirth",
        "Type": "System.DateTime",
        "IsRequired": false
      },
      {
        "Name": "WorkPassCardNumber",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "WorkPassCardIssuedDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "WorkPassCardExpiredDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "EmergencyContactName",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "EmergencyContactNumber",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "EmergencyRelationship",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "CreatedBy",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "ApplicationAccesses",
        "Type": "System.Collections.Generic.List\u00601[[ControlTower.DTOs.EmployeeManagementSystem.CreateEmployeeApplicationAccessDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "IsRequired": false
      },
      {
        "Name": "ProfileImage",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.UserDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.EmployeeController",
    "Method": "CreateApplicationAccess",
    "RelativePath": "api/Employee/{employeeId}/application-access",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "employeeId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.CreateApplicationAccessDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.EmployeeController",
    "Method": "UpdateApplicationAccess",
    "RelativePath": "api/Employee/{employeeId}/application-access/{accessId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "employeeId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "accessId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.UpdateApplicationAccessDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.EmployeeController",
    "Method": "GetEmployee",
    "RelativePath": "api/Employee/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.UserDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.EmployeeController",
    "Method": "PutEmployee",
    "RelativePath": "api/Employee/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateEmployeeDto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.UpdateEmployeeDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.EmployeeController",
    "Method": "DeleteEmployee",
    "RelativePath": "api/Employee/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.EmployeeController",
    "Method": "UploadProfileImage",
    "RelativePath": "api/Employee/{id}/profile-image",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "ProfileImage",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "UploadedBy",
        "Type": "System.Guid",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.EmployeeApplicationAccessController",
    "Method": "GetUserApplicationAccesses",
    "RelativePath": "api/EmployeeApplicationAccess",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.EmployeeManagementSystem.UserApplicationAccessDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.EmployeeApplicationAccessController",
    "Method": "PostEmployeeApplicationAccess",
    "RelativePath": "api/EmployeeApplicationAccess",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.CreateEmployeeApplicationAccessDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.UserApplicationAccessDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.EmployeeApplicationAccessController",
    "Method": "GetEmployeeApplicationAccess",
    "RelativePath": "api/EmployeeApplicationAccess/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.UserApplicationAccessDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.EmployeeApplicationAccessController",
    "Method": "PutEmployeeApplicationAccess",
    "RelativePath": "api/EmployeeApplicationAccess/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.UpdateEmployeeApplicationAccessDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.EmployeeApplicationAccessController",
    "Method": "DeleteEmployeeApplicationAccess",
    "RelativePath": "api/EmployeeApplicationAccess/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.EmployeeApplicationAccessController",
    "Method": "RevokeEmployeeApplicationAccess",
    "RelativePath": "api/EmployeeApplicationAccess/{id}/revoke",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "revokedBy",
        "Type": "System.Nullable\u00601[[System.Guid, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.EmployeeApplicationAccessController",
    "Method": "GetUserApplicationAccessesByUser",
    "RelativePath": "api/EmployeeApplicationAccess/employee/{employeeId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "employeeId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.EmployeeManagementSystem.UserApplicationAccessDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.EmployeeImageController",
    "Method": "GetProfileImage",
    "RelativePath": "api/EmployeeImage/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.EmployeeImageController",
    "Method": "DeleteProfileImage",
    "RelativePath": "api/EmployeeImage/{userId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "deletedBy",
        "Type": "System.Guid",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.FormStatusWarehouseController",
    "Method": "GetFormStatusWarehouses",
    "RelativePath": "api/FormStatusWarehouse",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.ReportManagementSystem.FormStatusWarehouseDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.FormStatusWarehouseController",
    "Method": "CreateFormStatusWarehouse",
    "RelativePath": "api/FormStatusWarehouse",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.CreateFormStatusWarehouseDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.FormStatusWarehouseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.FormStatusWarehouseController",
    "Method": "GetFormStatusWarehouse",
    "RelativePath": "api/FormStatusWarehouse/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.FormStatusWarehouseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.FormStatusWarehouseController",
    "Method": "UpdateFormStatusWarehouse",
    "RelativePath": "api/FormStatusWarehouse/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.UpdateFormStatusWarehouseDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.FormStatusWarehouseController",
    "Method": "DeleteFormStatusWarehouse",
    "RelativePath": "api/FormStatusWarehouse/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.FurtherActionTakenWarehouseController",
    "Method": "GetFurtherActionTakenWarehouses",
    "RelativePath": "api/FurtherActionTakenWarehouse",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.ReportManagementSystem.FurtherActionTakenWarehouseDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.FurtherActionTakenWarehouseController",
    "Method": "CreateFurtherActionTakenWarehouse",
    "RelativePath": "api/FurtherActionTakenWarehouse",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.CreateFurtherActionTakenWarehouseDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.FurtherActionTakenWarehouseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.FurtherActionTakenWarehouseController",
    "Method": "GetFurtherActionTakenWarehouse",
    "RelativePath": "api/FurtherActionTakenWarehouse/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.FurtherActionTakenWarehouseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.FurtherActionTakenWarehouseController",
    "Method": "UpdateFurtherActionTakenWarehouse",
    "RelativePath": "api/FurtherActionTakenWarehouse/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.UpdateFurtherActionTakenWarehouseDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.FurtherActionTakenWarehouseController",
    "Method": "DeleteFurtherActionTakenWarehouse",
    "RelativePath": "api/FurtherActionTakenWarehouse/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ImportFileRecordsController",
    "Method": "GetImportFileRecords",
    "RelativePath": "api/ImportFileRecords",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.ReportManagementSystem.ImportFileRecordsDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ImportFileRecordsController",
    "Method": "CreateImportFileRecord",
    "RelativePath": "api/ImportFileRecords",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.CreateImportFileRecordsDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.ImportFileRecordsDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ImportFileRecordsController",
    "Method": "GetImportFileRecord",
    "RelativePath": "api/ImportFileRecords/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.ImportFileRecordsDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ImportFileRecordsController",
    "Method": "UpdateImportFileRecord",
    "RelativePath": "api/ImportFileRecords/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.UpdateImportFileRecordsDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ImportFileRecordsController",
    "Method": "DeleteImportFileRecord",
    "RelativePath": "api/ImportFileRecords/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ImportFileRecordsController",
    "Method": "GetImportFileRecordsByFormType",
    "RelativePath": "api/ImportFileRecords/by-form-type/{formTypeId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "formTypeId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.ReportManagementSystem.ImportFileRecordsDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ImportFormTypesController",
    "Method": "GetImportFormTypes",
    "RelativePath": "api/ImportFormTypes",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.ReportManagementSystem.ImportFormTypesDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ImportFormTypesController",
    "Method": "CreateImportFormTypes",
    "RelativePath": "api/ImportFormTypes",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.CreateImportFormTypesDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.ImportFormTypesDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ImportFormTypesController",
    "Method": "GetImportFormTypes",
    "RelativePath": "api/ImportFormTypes/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.ImportFormTypesDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ImportFormTypesController",
    "Method": "UpdateImportFormTypes",
    "RelativePath": "api/ImportFormTypes/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.UpdateImportFormTypesDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ImportFormTypesController",
    "Method": "DeleteImportFormTypes",
    "RelativePath": "api/ImportFormTypes/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsController",
    "Method": "GetNews",
    "RelativePath": "api/News",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "search",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "categoryId",
        "Type": "System.Nullable\u00601[[System.Guid, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "isPublished",
        "Type": "System.Nullable\u00601[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.PagedResult\u00601[[ControlTower.DTOs.NewsPortalSystem.NewsListDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsController",
    "Method": "PostNews",
    "RelativePath": "api/News",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Title",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Slug",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Description",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Excerpt",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Remark",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "NewsCategoryID",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "Rate",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "PublishDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "IsPublished",
        "Type": "System.Boolean",
        "IsRequired": false
      },
      {
        "Name": "CreatedBy",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.NewsPortalSystem.NewsDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsController",
    "Method": "GetNews",
    "RelativePath": "api/News/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.NewsPortalSystem.NewsDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsController",
    "Method": "PutNews",
    "RelativePath": "api/News/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "ID",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "Title",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Slug",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Description",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Excerpt",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Remark",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "NewsCategoryID",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "Rate",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "PublishDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "IsPublished",
        "Type": "System.Boolean",
        "IsRequired": false
      },
      {
        "Name": "UpdatedBy",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsController",
    "Method": "DeleteNews",
    "RelativePath": "api/News/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsController",
    "Method": "UploadHeader",
    "RelativePath": "api/News/{id}/header",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "HeaderImage",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "UploadedBy",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsController",
    "Method": "PublishNews",
    "RelativePath": "api/News/{id}/publish",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updatedBy",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsController",
    "Method": "UploadThumbnail",
    "RelativePath": "api/News/{id}/thumbnail",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "ThumbnailImage",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "UploadedBy",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsController",
    "Method": "UnpublishNews",
    "RelativePath": "api/News/{id}/unpublish",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updatedBy",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsController",
    "Method": "GetNewsImage",
    "RelativePath": "api/News/image/{newsId}/{imageName}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "newsId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "imageName",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsController",
    "Method": "GetNewsBySlug",
    "RelativePath": "api/News/slug/{slug}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "slug",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.NewsPortalSystem.NewsDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsCategoryController",
    "Method": "GetNewsCategory",
    "RelativePath": "api/NewsCategory",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.NewsPortalSystem.NewsCategoryListDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsCategoryController",
    "Method": "PostNewsCategory",
    "RelativePath": "api/NewsCategory",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.NewsPortalSystem.CreateNewsCategoryDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.NewsPortalSystem.NewsCategoryDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsCategoryController",
    "Method": "GetNewsCategory",
    "RelativePath": "api/NewsCategory/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.NewsPortalSystem.NewsCategoryDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsCategoryController",
    "Method": "PutNewsCategory",
    "RelativePath": "api/NewsCategory/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.NewsPortalSystem.UpdateNewsCategoryDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsCategoryController",
    "Method": "DeleteNewsCategory",
    "RelativePath": "api/NewsCategory/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsCategoryController",
    "Method": "GetNewsCategoryTree",
    "RelativePath": "api/NewsCategory/tree",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.NewsPortalSystem.NewsCategoryDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsImagesController",
    "Method": "GetNewsImages",
    "RelativePath": "api/NewsImages",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "newsId",
        "Type": "System.Nullable\u00601[[System.Guid, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.NewsPortalSystem.NewsImageDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsImagesController",
    "Method": "GetNewsImage",
    "RelativePath": "api/NewsImages/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.NewsPortalSystem.NewsImageDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsImagesController",
    "Method": "UpdateNewsImage",
    "RelativePath": "api/NewsImages/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.NewsPortalSystem.UpdateNewsImageDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsImagesController",
    "Method": "DeleteNewsImage",
    "RelativePath": "api/NewsImages/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsImagesController",
    "Method": "UploadImages",
    "RelativePath": "api/NewsImages/upload",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "newsId",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "images",
        "Type": "System.Collections.Generic.List\u00601[[Microsoft.AspNetCore.Http.IFormFile, Microsoft.AspNetCore.Http.Features, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "IsRequired": false
      },
      {
        "Name": "altText",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "caption",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "isFeatured",
        "Type": "System.Boolean",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[ControlTower.DTOs.NewsPortalSystem.NewsImageDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.OccupationController",
    "Method": "GetOccupations",
    "RelativePath": "api/Occupation",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.EmployeeManagementSystem.OccupationDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.OccupationController",
    "Method": "PostOccupation",
    "RelativePath": "api/Occupation",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createOccupationDto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.CreateOccupationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.OccupationDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.OccupationController",
    "Method": "GetOccupation",
    "RelativePath": "api/Occupation/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.OccupationDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.OccupationController",
    "Method": "PutOccupation",
    "RelativePath": "api/Occupation/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateOccupationDto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.UpdateOccupationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.OccupationController",
    "Method": "DeleteOccupation",
    "RelativePath": "api/Occupation/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.OccupationLevelController",
    "Method": "GetOccupationLevels",
    "RelativePath": "api/OccupationLevel",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.EmployeeManagementSystem.OccupationLevelDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.OccupationLevelController",
    "Method": "PostOccupationLevel",
    "RelativePath": "api/OccupationLevel",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.CreateOccupationLevelDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.OccupationLevelDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.OccupationLevelController",
    "Method": "GetOccupationLevel",
    "RelativePath": "api/OccupationLevel/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.OccupationLevelDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.OccupationLevelController",
    "Method": "PutOccupationLevel",
    "RelativePath": "api/OccupationLevel/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.UpdateOccupationLevelDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.OccupationLevelController",
    "Method": "DeleteOccupationLevel",
    "RelativePath": "api/OccupationLevel/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMChamberMagneticContactController",
    "Method": "GetPMChamberMagneticContacts",
    "RelativePath": "api/PMChamberMagneticContact",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.ReportManagementSystem.PMChamberMagneticContactDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMChamberMagneticContactController",
    "Method": "PostPMChamberMagneticContact",
    "RelativePath": "api/PMChamberMagneticContact",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.CreatePMChamberMagneticContactDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.PMChamberMagneticContactDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMChamberMagneticContactController",
    "Method": "GetPMChamberMagneticContact",
    "RelativePath": "api/PMChamberMagneticContact/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.PMChamberMagneticContactDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMChamberMagneticContactController",
    "Method": "PutPMChamberMagneticContact",
    "RelativePath": "api/PMChamberMagneticContact/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.UpdatePMChamberMagneticContactDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMChamberMagneticContactController",
    "Method": "DeletePMChamberMagneticContact",
    "RelativePath": "api/PMChamberMagneticContact/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMDVREquipmentController",
    "Method": "GetPMDVREquipments",
    "RelativePath": "api/PMDVREquipment",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.ReportManagementSystem.PMDVREquipmentDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMDVREquipmentController",
    "Method": "PostPMDVREquipment",
    "RelativePath": "api/PMDVREquipment",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.CreatePMDVREquipmentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.PMDVREquipmentDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMDVREquipmentController",
    "Method": "GetPMDVREquipment",
    "RelativePath": "api/PMDVREquipment/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.PMDVREquipmentDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMDVREquipmentController",
    "Method": "PutPMDVREquipment",
    "RelativePath": "api/PMDVREquipment/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.UpdatePMDVREquipmentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMDVREquipmentController",
    "Method": "DeletePMDVREquipment",
    "RelativePath": "api/PMDVREquipment/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMMainRtuCabinetController",
    "Method": "GetPMMainRtuCabinets",
    "RelativePath": "api/PMMainRtuCabinet",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.ReportManagementSystem.PMMainRtuCabinetDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMMainRtuCabinetController",
    "Method": "PostPMMainRtuCabinet",
    "RelativePath": "api/PMMainRtuCabinet",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.CreatePMMainRtuCabinetDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.PMMainRtuCabinetDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMMainRtuCabinetController",
    "Method": "GetPMMainRtuCabinet",
    "RelativePath": "api/PMMainRtuCabinet/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.PMMainRtuCabinetDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMMainRtuCabinetController",
    "Method": "PutPMMainRtuCabinet",
    "RelativePath": "api/PMMainRtuCabinet/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.UpdatePMMainRtuCabinetDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMMainRtuCabinetController",
    "Method": "DeletePMMainRtuCabinet",
    "RelativePath": "api/PMMainRtuCabinet/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMReportFormRTUController",
    "Method": "GetPMReportFormRTU",
    "RelativePath": "api/PMReportFormRTU",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.ReportManagementSystem.PMReportFormRTUDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMReportFormRTUController",
    "Method": "CreatePMReportForm",
    "RelativePath": "api/PMReportFormRTU",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.CreatePMReportFormRTUDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.PMReportFormRTUDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMReportFormRTUController",
    "Method": "GetPMReportForm",
    "RelativePath": "api/PMReportFormRTU/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.PMReportFormRTUDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMReportFormRTUController",
    "Method": "UpdatePMReportForm",
    "RelativePath": "api/PMReportFormRTU/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.UpdatePMReportFormRTUDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMReportFormRTUController",
    "Method": "DeletePMReportForm",
    "RelativePath": "api/PMReportFormRTU/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMReportFormServerController",
    "Method": "GetPMReportFormServer",
    "RelativePath": "api/PMReportFormServer",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.ReportManagementSystem.PMReportFormServerDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMReportFormServerController",
    "Method": "PostPMReportFormServer",
    "RelativePath": "api/PMReportFormServer",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.CreatePMReportFormServerDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.PMReportFormServerDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMReportFormServerController",
    "Method": "GetPMReportFormServer",
    "RelativePath": "api/PMReportFormServer/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.PMReportFormServerDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMReportFormServerController",
    "Method": "PutPMReportFormServer",
    "RelativePath": "api/PMReportFormServer/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.UpdatePMReportFormServerDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMReportFormServerController",
    "Method": "DeletePMReportFormServer",
    "RelativePath": "api/PMReportFormServer/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMReportFormTypeController",
    "Method": "GetPMReportFormTypes",
    "RelativePath": "api/PMReportFormType",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.ReportManagementSystem.PMReportFormTypeDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMReportFormTypeController",
    "Method": "CreatePMReportFormType",
    "RelativePath": "api/PMReportFormType",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.CreatePMReportFormTypeDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.PMReportFormTypeDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMReportFormTypeController",
    "Method": "GetPMReportFormType",
    "RelativePath": "api/PMReportFormType/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.PMReportFormTypeDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMReportFormTypeController",
    "Method": "UpdatePMReportFormType",
    "RelativePath": "api/PMReportFormType/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.UpdatePMReportFormTypeDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMReportFormTypeController",
    "Method": "DeletePMReportFormType",
    "RelativePath": "api/PMReportFormType/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMRTUCabinetCoolingController",
    "Method": "GetPMRTUCabinetCoolings",
    "RelativePath": "api/PMRTUCabinetCooling",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.ReportManagementSystem.PMRTUCabinetCoolingDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMRTUCabinetCoolingController",
    "Method": "PostPMRTUCabinetCooling",
    "RelativePath": "api/PMRTUCabinetCooling",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.CreatePMRTUCabinetCoolingDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.PMRTUCabinetCoolingDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMRTUCabinetCoolingController",
    "Method": "GetPMRTUCabinetCooling",
    "RelativePath": "api/PMRTUCabinetCooling/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.PMRTUCabinetCoolingDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMRTUCabinetCoolingController",
    "Method": "PutPMRTUCabinetCooling",
    "RelativePath": "api/PMRTUCabinetCooling/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.UpdatePMRTUCabinetCoolingDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.PMRTUCabinetCoolingController",
    "Method": "DeletePMRTUCabinetCooling",
    "RelativePath": "api/PMRTUCabinetCooling/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ReportFormController",
    "Method": "GetReportForms",
    "RelativePath": "api/ReportForm",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "search",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "reportFormTypeId",
        "Type": "System.Nullable\u00601[[System.Guid, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "SystemNameWarehouseID",
        "Type": "System.Nullable\u00601[[System.Guid, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "StationNameWarehouseID",
        "Type": "System.Nullable\u00601[[System.Guid, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ReportFormController",
    "Method": "CreateReportForm",
    "RelativePath": "api/ReportForm",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.CreateReportFormDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.ReportFormDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ReportFormController",
    "Method": "GetReportForm",
    "RelativePath": "api/ReportForm/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.ReportFormDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ReportFormController",
    "Method": "UpdateReportForm",
    "RelativePath": "api/ReportForm/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.UpdateReportFormDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ReportFormController",
    "Method": "DeleteReportForm",
    "RelativePath": "api/ReportForm/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ReportFormController",
    "Method": "GetReportFormsByType",
    "RelativePath": "api/ReportForm/ByReportFormType/{reportFormTypeId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "reportFormTypeId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.ReportManagementSystem.ReportFormDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ReportFormController",
    "Method": "GetReportFormsByStationName",
    "RelativePath": "api/ReportForm/ByStationName/{StationNameWarehouseID}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "StationNameWarehouseID",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ReportFormController",
    "Method": "GetReportFormsBySystemName",
    "RelativePath": "api/ReportForm/BySystemName/{SystemNameWarehouseID}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "SystemNameWarehouseID",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.ReportManagementSystem.ReportFormDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ReportFormController",
    "Method": "GetCMReportForm",
    "RelativePath": "api/ReportForm/CMReportForm/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ReportFormController",
    "Method": "GetNextJobNumber",
    "RelativePath": "api/ReportForm/NextJobNumber",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ReportFormController",
    "Method": "GetRTUPMReportForm",
    "RelativePath": "api/ReportForm/RTUPMReportForm/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ReportFormImageController",
    "Method": "GetReportFormImages",
    "RelativePath": "api/ReportFormImage",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.ReportManagementSystem.ReportFormImageDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ReportFormImageController",
    "Method": "CreateReportFormImage",
    "RelativePath": "api/ReportFormImage",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.CreateReportFormImageDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.ReportFormImageDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ReportFormImageController",
    "Method": "GetReportFormImage",
    "RelativePath": "api/ReportFormImage/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.ReportFormImageDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ReportFormImageController",
    "Method": "UpdateReportFormImage",
    "RelativePath": "api/ReportFormImage/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.UpdateReportFormImageDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ReportFormImageController",
    "Method": "DeleteReportFormImage",
    "RelativePath": "api/ReportFormImage/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ReportFormImageController",
    "Method": "GetImagesByReportForm",
    "RelativePath": "api/ReportFormImage/ByReportForm/{reportFormId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "reportFormId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.ReportManagementSystem.ReportFormImageDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ReportFormImageController",
    "Method": "GetReportFormImage",
    "RelativePath": "api/ReportFormImage/image/{reportFormId}/{imageName}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "reportFormId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "imageName",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ReportFormImageController",
    "Method": "UploadReportFormImage",
    "RelativePath": "api/ReportFormImage/upload",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "ReportFormId",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "ImageFile",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "ReportFormImageTypeId",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "SectionName",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.ReportFormImageDto",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ReportFormImageTypeController",
    "Method": "GetReportFormImageTypes",
    "RelativePath": "api/ReportFormImageType",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.ReportManagementSystem.ReportFormImageTypeDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ReportFormImageTypeController",
    "Method": "CreateReportFormImageType",
    "RelativePath": "api/ReportFormImageType",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.CreateReportFormImageTypeDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.ReportFormImageTypeDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ReportFormImageTypeController",
    "Method": "GetReportFormImageType",
    "RelativePath": "api/ReportFormImageType/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.ReportFormImageTypeDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ReportFormImageTypeController",
    "Method": "UpdateReportFormImageType",
    "RelativePath": "api/ReportFormImageType/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.UpdateReportFormImageTypeDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ReportFormImageTypeController",
    "Method": "DeleteReportFormImageType",
    "RelativePath": "api/ReportFormImageType/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ReportFormTypeController",
    "Method": "GetReportFormTypes",
    "RelativePath": "api/ReportFormType",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.ReportManagementSystem.ReportFormTypeDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ReportFormTypeController",
    "Method": "CreateReportFormType",
    "RelativePath": "api/ReportFormType",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.CreateReportFormTypeDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.ReportFormTypeDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ReportFormTypeController",
    "Method": "GetReportFormType",
    "RelativePath": "api/ReportFormType/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.ReportFormTypeDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ReportFormTypeController",
    "Method": "UpdateReportFormType",
    "RelativePath": "api/ReportFormType/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.UpdateReportFormTypeDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ReportFormTypeController",
    "Method": "DeleteReportFormType",
    "RelativePath": "api/ReportFormType/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ResultStatusController",
    "Method": "GetResultStatuses",
    "RelativePath": "api/ResultStatus",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.ReportManagementSystem.ResultStatusDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ResultStatusController",
    "Method": "PostResultStatus",
    "RelativePath": "api/ResultStatus",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.CreateResultStatusDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.ResultStatusDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ResultStatusController",
    "Method": "GetResultStatus",
    "RelativePath": "api/ResultStatus/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.ResultStatusDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ResultStatusController",
    "Method": "PutResultStatus",
    "RelativePath": "api/ResultStatus/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.UpdateResultStatusDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.ResultStatusController",
    "Method": "DeleteResultStatus",
    "RelativePath": "api/ResultStatus/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.RoomBookingSystem.RoomController",
    "Method": "GetRooms",
    "RelativePath": "api/Room",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.RoomBookingSystem.RoomDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.RoomBookingSystem.RoomController",
    "Method": "PostRoom",
    "RelativePath": "api/Room",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.RoomBookingSystem.CreateRoomDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.RoomBookingSystem.RoomDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.RoomBookingSystem.RoomController",
    "Method": "GetRoom",
    "RelativePath": "api/Room/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.RoomBookingSystem.RoomDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.RoomBookingSystem.RoomController",
    "Method": "PutRoom",
    "RelativePath": "api/Room/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.RoomBookingSystem.UpdateRoomDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.RoomBookingSystem.RoomController",
    "Method": "DeleteRoom",
    "RelativePath": "api/Room/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.RoomBookingSystem.RoomBookingController",
    "Method": "GetBookings",
    "RelativePath": "api/RoomBooking",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.RoomBookingSystem.BookingDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.RoomBookingSystem.RoomBookingController",
    "Method": "CreateBooking",
    "RelativePath": "api/RoomBooking",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createBookingDto",
        "Type": "ControlTower.DTOs.RoomBookingSystem.CreateBookingDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.RoomBookingSystem.BookingDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.RoomBookingSystem.RoomBookingController",
    "Method": "GetBooking",
    "RelativePath": "api/RoomBooking/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.RoomBookingSystem.BookingDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.RoomBookingSystem.RoomBookingController",
    "Method": "UpdateBooking",
    "RelativePath": "api/RoomBooking/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateBookingDto",
        "Type": "ControlTower.DTOs.RoomBookingSystem.UpdateBookingDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.RoomBookingSystem.RoomBookingController",
    "Method": "DeleteBooking",
    "RelativePath": "api/RoomBooking/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.RoomBookingSystem.RoomBookingController",
    "Method": "ApproveBooking",
    "RelativePath": "api/RoomBooking/{id}/approve",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "approveBookingDto",
        "Type": "ControlTower.DTOs.RoomBookingSystem.ApproveBookingDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.RoomBookingSystem.RoomBookingController",
    "Method": "CancelBooking",
    "RelativePath": "api/RoomBooking/{id}/cancel",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "cancelBookingDto",
        "Type": "ControlTower.DTOs.RoomBookingSystem.CancelBookingDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.RoomBookingSystem.RoomBookingController",
    "Method": "RejectBooking",
    "RelativePath": "api/RoomBooking/{id}/reject",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "rejectBookingDto",
        "Type": "ControlTower.DTOs.RoomBookingSystem.RejectBookingDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.RoomBookingSystem.RoomBookingController",
    "Method": "GetCalendarBookings",
    "RelativePath": "api/RoomBooking/calendar",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "roomId",
        "Type": "System.Nullable\u00601[[System.Guid, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "startDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "endDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.RoomBookingSystem.CalendarBookingDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.RoomBookingSystem.RoomBookingStatusController",
    "Method": "GetBookingStatuses",
    "RelativePath": "api/RoomBookingStatus",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.RoomBookingSystem.BookingStatusDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.RoomBookingSystem.RoomBookingStatusController",
    "Method": "PostBookingStatus",
    "RelativePath": "api/RoomBookingStatus",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.RoomBookingSystem.CreateBookingStatusDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.RoomBookingSystem.BookingStatusDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.RoomBookingSystem.RoomBookingStatusController",
    "Method": "GetBookingStatus",
    "RelativePath": "api/RoomBookingStatus/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.RoomBookingSystem.BookingStatusDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.RoomBookingSystem.RoomBookingStatusController",
    "Method": "PutBookingStatus",
    "RelativePath": "api/RoomBookingStatus/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.RoomBookingSystem.UpdateBookingStatusDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.RoomBookingSystem.RoomBookingStatusController",
    "Method": "DeleteBookingStatus",
    "RelativePath": "api/RoomBookingStatus/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.StationNameWarehouseController",
    "Method": "GetStationNameWarehouses",
    "RelativePath": "api/StationNameWarehouse",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "search",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "SystemNameWarehouseID",
        "Type": "System.Nullable\u00601[[System.Guid, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.StationNameWarehouseController",
    "Method": "CreateStationNameWarehouse",
    "RelativePath": "api/StationNameWarehouse",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.CreateStationNameWarehouseDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.StationNameWarehouseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.StationNameWarehouseController",
    "Method": "GetStationNameWarehouse",
    "RelativePath": "api/StationNameWarehouse/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.StationNameWarehouseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.StationNameWarehouseController",
    "Method": "UpdateStationNameWarehouse",
    "RelativePath": "api/StationNameWarehouse/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.UpdateStationNameWarehouseDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.StationNameWarehouseController",
    "Method": "DeleteStationNameWarehouse",
    "RelativePath": "api/StationNameWarehouse/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.StationNameWarehouseController",
    "Method": "GetStationNamesBySystemName",
    "RelativePath": "api/StationNameWarehouse/BySystemName/{SystemNameWarehouseID}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "SystemNameWarehouseID",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.ReportManagementSystem.StationNameWarehouseDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.SubDepartmentController",
    "Method": "GetSubDepartments",
    "RelativePath": "api/SubDepartment",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "search",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "departmentId",
        "Type": "System.Nullable\u00601[[System.Guid, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.PagedResult\u00601[[ControlTower.DTOs.EmployeeManagementSystem.SubDepartmentDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.SubDepartmentController",
    "Method": "CreateSubDepartment",
    "RelativePath": "api/SubDepartment",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.CreateSubDepartmentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.SubDepartmentDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.SubDepartmentController",
    "Method": "GetSubDepartment",
    "RelativePath": "api/SubDepartment/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.SubDepartmentDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.SubDepartmentController",
    "Method": "UpdateSubDepartment",
    "RelativePath": "api/SubDepartment/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.UpdateSubDepartmentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.SubDepartmentController",
    "Method": "DeleteSubDepartment",
    "RelativePath": "api/SubDepartment/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.SystemNameWarehouseController",
    "Method": "GetSystemNameWarehouses",
    "RelativePath": "api/SystemNameWarehouse",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "search",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.SystemNameWarehouseController",
    "Method": "CreateSystemNameWarehouse",
    "RelativePath": "api/SystemNameWarehouse",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.CreateSystemNameWarehouseDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.SystemNameWarehouseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.SystemNameWarehouseController",
    "Method": "GetSystemNameWarehouse",
    "RelativePath": "api/SystemNameWarehouse/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ReportManagementSystem.SystemNameWarehouseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.SystemNameWarehouseController",
    "Method": "UpdateSystemNameWarehouse",
    "RelativePath": "api/SystemNameWarehouse/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.ReportManagementSystem.UpdateSystemNameWarehouseDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ReportManagementSystem.SystemNameWarehouseController",
    "Method": "DeleteSystemNameWarehouse",
    "RelativePath": "api/SystemNameWarehouse/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.UserImageController",
    "Method": "GetUserImage",
    "RelativePath": "api/UserImage/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.UserImageDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.UserImageController",
    "Method": "DeleteUserImage",
    "RelativePath": "api/UserImage/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "deletedBy",
        "Type": "System.Guid",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.UserImageController",
    "Method": "GetUserImages",
    "RelativePath": "api/UserImage/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.EmployeeManagementSystem.UserImageDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]