[
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.AccessLevelController",
    "Method": "GetAccessLevels",
    "RelativePath": "api/AccessLevel",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.EmployeeManagementSystem.AccessLevelDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.AccessLevelController",
    "Method": "PostAccessLevel",
    "RelativePath": "api/AccessLevel",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.CreateAccessLevelDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.Models.EmployeeManagementSystem.AccessLevel",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.AccessLevelController",
    "Method": "GetAccessLevel",
    "RelativePath": "api/AccessLevel/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.AccessLevelDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.AccessLevelController",
    "Method": "PutAccessLevel",
    "RelativePath": "api/AccessLevel/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.UpdateAccessLevelDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.AccessLevelController",
    "Method": "DeleteAccessLevel",
    "RelativePath": "api/AccessLevel/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ServiceReportSystem.ActionTakenWarehouseController",
    "Method": "GetActionTakenWarehouses",
    "RelativePath": "api/ActionTakenWarehouse",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.Models.ServiceReportSystem.ActionTakenWarehouse, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.ApplicationController",
    "Method": "GetApplications",
    "RelativePath": "api/Application",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.EmployeeManagementSystem.ApplicationDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.ApplicationController",
    "Method": "PostApplication",
    "RelativePath": "api/Application",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createApplicationDto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.CreateApplicationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.ApplicationDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.ApplicationController",
    "Method": "GetApplication",
    "RelativePath": "api/Application/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.ApplicationDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.ApplicationController",
    "Method": "PutApplication",
    "RelativePath": "api/Application/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateApplicationDto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.UpdateApplicationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.ApplicationController",
    "Method": "DeleteApplication",
    "RelativePath": "api/Application/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.AuthController",
    "Method": "SignIn",
    "RelativePath": "api/Auth/signin",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "signInDto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.SignInDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.AuthResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.DepartmentController",
    "Method": "GetDepartments",
    "RelativePath": "api/Department",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.EmployeeManagementSystem.DepartmentDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.DepartmentController",
    "Method": "PostDepartment",
    "RelativePath": "api/Department",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.CreateDepartmentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.DepartmentDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.DepartmentController",
    "Method": "GetDepartment",
    "RelativePath": "api/Department/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.DepartmentDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.DepartmentController",
    "Method": "PutDepartment",
    "RelativePath": "api/Department/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.UpdateDepartmentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.DepartmentController",
    "Method": "DeleteDepartment",
    "RelativePath": "api/Department/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.EmployeeController",
    "Method": "GetUsers",
    "RelativePath": "api/Employee",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.EmployeeManagementSystem.UserDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.EmployeeController",
    "Method": "PostEmployee",
    "RelativePath": "api/Employee",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createEmployeeDto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.CreateEmployeeDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.UserDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.EmployeeController",
    "Method": "GetEmployee",
    "RelativePath": "api/Employee/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.UserDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.EmployeeController",
    "Method": "PutEmployee",
    "RelativePath": "api/Employee/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateEmployeeDto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.UpdateEmployeeDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.EmployeeController",
    "Method": "DeleteEmployee",
    "RelativePath": "api/Employee/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.EmployeeApplicationAccessController",
    "Method": "GetUserApplicationAccesses",
    "RelativePath": "api/EmployeeApplicationAccess",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.EmployeeManagementSystem.UserApplicationAccessDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.EmployeeApplicationAccessController",
    "Method": "PostEmployeeApplicationAccess",
    "RelativePath": "api/EmployeeApplicationAccess",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.CreateEmployeeApplicationAccessDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.UserApplicationAccessDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.EmployeeApplicationAccessController",
    "Method": "GetEmployeeApplicationAccess",
    "RelativePath": "api/EmployeeApplicationAccess/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.UserApplicationAccessDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.EmployeeApplicationAccessController",
    "Method": "PutEmployeeApplicationAccess",
    "RelativePath": "api/EmployeeApplicationAccess/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.UpdateEmployeeApplicationAccessDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.EmployeeApplicationAccessController",
    "Method": "DeleteEmployeeApplicationAccess",
    "RelativePath": "api/EmployeeApplicationAccess/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.EmployeeApplicationAccessController",
    "Method": "RevokeEmployeeApplicationAccess",
    "RelativePath": "api/EmployeeApplicationAccess/{id}/revoke",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "revokedBy",
        "Type": "System.Nullable\u00601[[System.Guid, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.EmployeeApplicationAccessController",
    "Method": "GetUserApplicationAccessesByUser",
    "RelativePath": "api/EmployeeApplicationAccess/employee/{employeeId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "employeeId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.EmployeeManagementSystem.UserApplicationAccessDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ServiceReportSystem.FollowupActionWarehouseController",
    "Method": "GetFollowupActionWarehouses",
    "RelativePath": "api/FollowupActionWarehouse",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.Models.ServiceReportSystem.FollowupActionWarehouse, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ServiceReportSystem.FormStatusWarehouseController",
    "Method": "GetFormStatusWarehouses",
    "RelativePath": "api/FormStatusWarehouse",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.Models.ServiceReportSystem.FormStatusWarehouses, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ServiceReportSystem.Controllers.FurtherActionTakenWarehouseController",
    "Method": "GetFurtherActionTakenWarehouses",
    "RelativePath": "api/FurtherActionTakenWarehouse",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.Models.ServiceReportSystem.FurtherActionTakenWarehouse, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ServiceReportSystem.ImportFileRecordsController",
    "Method": "GetImportFileRecords",
    "RelativePath": "api/ImportFileRecords",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.ServiceReportSystem.ImportFileRecordsDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ServiceReportSystem.ImportFileRecordsController",
    "Method": "CreateImportFileRecord",
    "RelativePath": "api/ImportFileRecords",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.ServiceReportSystem.CreateImportFileRecordsDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ServiceReportSystem.ImportFileRecordsDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ServiceReportSystem.ImportFileRecordsController",
    "Method": "GetImportFileRecord",
    "RelativePath": "api/ImportFileRecords/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ServiceReportSystem.ImportFileRecordsDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ServiceReportSystem.ImportFileRecordsController",
    "Method": "UpdateImportFileRecord",
    "RelativePath": "api/ImportFileRecords/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.ServiceReportSystem.UpdateImportFileRecordsDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ServiceReportSystem.ImportFileRecordsController",
    "Method": "DeleteImportFileRecord",
    "RelativePath": "api/ImportFileRecords/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "deletedBy",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ServiceReportSystem.ImportFileRecordsController",
    "Method": "ProcessImportData",
    "RelativePath": "api/ImportFileRecords/ProcessImportData",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "importFormTypeId",
        "Type": "System.Guid",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ServiceReportSystem.ImportFormTypesController",
    "Method": "GetImportFormTypes",
    "RelativePath": "api/ImportFormTypes",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.ServiceReportSystem.ImportFormTypesDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ServiceReportSystem.ImportFormTypesController",
    "Method": "CreateImportFormType",
    "RelativePath": "api/ImportFormTypes",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.ServiceReportSystem.CreateImportFormTypesDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ServiceReportSystem.ImportFormTypesDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ServiceReportSystem.ImportFormTypesController",
    "Method": "GetImportFormType",
    "RelativePath": "api/ImportFormTypes/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ServiceReportSystem.ImportFormTypesDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ServiceReportSystem.ImportFormTypesController",
    "Method": "UpdateImportFormType",
    "RelativePath": "api/ImportFormTypes/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.ServiceReportSystem.UpdateImportFormTypesDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ServiceReportSystem.ImportFormTypesController",
    "Method": "DeleteImportFormType",
    "RelativePath": "api/ImportFormTypes/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "deletedBy",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ServiceReportSystem.Controllers.IssueFoundWarehouseController",
    "Method": "GetIssueFoundWarehouses",
    "RelativePath": "api/IssueFoundWarehouse",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.Models.ServiceReportSystem.IssueFoundWarehouse, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ServiceReportSystem.Controllers.IssueReportWarehouseController",
    "Method": "GetIssueReportWarehouses",
    "RelativePath": "api/IssueReportWarehouse",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.Models.ServiceReportSystem.IssueReportWarehouse, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ServiceReportSystem.Controllers.LocationWarehouseController",
    "Method": "GetLocationWarehouses",
    "RelativePath": "api/LocationWarehouse",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.Models.ServiceReportSystem.LocationWarehouse, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsController",
    "Method": "GetNews",
    "RelativePath": "api/News",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "search",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "categoryId",
        "Type": "System.Nullable\u00601[[System.Guid, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "isPublished",
        "Type": "System.Nullable\u00601[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.PagedResult\u00601[[ControlTower.DTOs.NewsPortalSystem.NewsListDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsController",
    "Method": "PostNews",
    "RelativePath": "api/News",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Title",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Slug",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Description",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Excerpt",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Remark",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "NewsCategoryID",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "Rate",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "PublishDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "IsPublished",
        "Type": "System.Boolean",
        "IsRequired": false
      },
      {
        "Name": "CreatedBy",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "images",
        "Type": "System.Collections.Generic.List\u00601[[Microsoft.AspNetCore.Http.IFormFile, Microsoft.AspNetCore.Http.Features, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.NewsPortalSystem.NewsDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsController",
    "Method": "GetNews",
    "RelativePath": "api/News/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.NewsPortalSystem.NewsDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsController",
    "Method": "PutNews",
    "RelativePath": "api/News/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.NewsPortalSystem.UpdateNewsDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsController",
    "Method": "DeleteNews",
    "RelativePath": "api/News/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsController",
    "Method": "PublishNews",
    "RelativePath": "api/News/{id}/publish",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updatedBy",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsController",
    "Method": "UnpublishNews",
    "RelativePath": "api/News/{id}/unpublish",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updatedBy",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsController",
    "Method": "GetNewsBySlug",
    "RelativePath": "api/News/slug/{slug}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "slug",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.NewsPortalSystem.NewsDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsCategoryController",
    "Method": "GetNewsCategory",
    "RelativePath": "api/NewsCategory",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.NewsPortalSystem.NewsCategoryListDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsCategoryController",
    "Method": "PostNewsCategory",
    "RelativePath": "api/NewsCategory",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.NewsPortalSystem.CreateNewsCategoryDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.NewsPortalSystem.NewsCategoryDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsCategoryController",
    "Method": "GetNewsCategory",
    "RelativePath": "api/NewsCategory/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.NewsPortalSystem.NewsCategoryDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsCategoryController",
    "Method": "PutNewsCategory",
    "RelativePath": "api/NewsCategory/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.NewsPortalSystem.UpdateNewsCategoryDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsCategoryController",
    "Method": "DeleteNewsCategory",
    "RelativePath": "api/NewsCategory/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsCategoryController",
    "Method": "GetNewsCategoryTree",
    "RelativePath": "api/NewsCategory/tree",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.NewsPortalSystem.NewsCategoryDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsImagesController",
    "Method": "GetNewsImages",
    "RelativePath": "api/NewsImages",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "newsId",
        "Type": "System.Nullable\u00601[[System.Guid, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.NewsPortalSystem.NewsImageDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsImagesController",
    "Method": "GetNewsImage",
    "RelativePath": "api/NewsImages/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.NewsPortalSystem.NewsImageDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsImagesController",
    "Method": "UpdateNewsImage",
    "RelativePath": "api/NewsImages/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.NewsPortalSystem.UpdateNewsImageDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsImagesController",
    "Method": "DeleteNewsImage",
    "RelativePath": "api/NewsImages/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.NewsPortalSystem.NewsImagesController",
    "Method": "UploadImages",
    "RelativePath": "api/NewsImages/upload",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "newsId",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "images",
        "Type": "System.Collections.Generic.List\u00601[[Microsoft.AspNetCore.Http.IFormFile, Microsoft.AspNetCore.Http.Features, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "IsRequired": false
      },
      {
        "Name": "altText",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "caption",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "isFeatured",
        "Type": "System.Boolean",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[ControlTower.DTOs.NewsPortalSystem.NewsImageDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.OccupationController",
    "Method": "GetOccupations",
    "RelativePath": "api/Occupation",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.DTOs.EmployeeManagementSystem.OccupationDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.OccupationController",
    "Method": "PostOccupation",
    "RelativePath": "api/Occupation",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createOccupationDto",
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.CreateOccupationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.OccupationDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.OccupationController",
    "Method": "GetOccupation",
    "RelativePath": "api/Occupation/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.EmployeeManagementSystem.OccupationDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.OccupationController",
    "Method": "PutOccupation",
    "RelativePath": "api/Occupation/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "occupation",
        "Type": "ControlTower.Models.EmployeeManagementSystem.Occupation",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.EmployeeManagementSystem.OccupationController",
    "Method": "DeleteOccupation",
    "RelativePath": "api/Occupation/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ServiceReportSystem.Controllers.ProjectNoWarehouseController",
    "Method": "GetProjectNoWarehouses",
    "RelativePath": "api/ProjectNoWarehouse",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.Models.ServiceReportSystem.ProjectNoWarehouse, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ServiceReportSystem.Controllers.ProjectNoWarehouseController",
    "Method": "GetProjectNoByProjectNumber",
    "RelativePath": "api/ProjectNoWarehouse/projectnumber/{projectNumber}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "projectNumber",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.Models.ServiceReportSystem.ProjectNoWarehouse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ServiceReportSystem.ServiceReportController",
    "Method": "GetServiceReports",
    "RelativePath": "api/ServiceReport",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.PagedResult\u00601[[ControlTower.DTOs.ServiceReportSystem.ServiceReportDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ServiceReportSystem.ServiceReportController",
    "Method": "CreateServiceReport",
    "RelativePath": "api/ServiceReport",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDto",
        "Type": "ControlTower.DTOs.ServiceReportSystem.CreateServiceReportDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ServiceReportSystem.ServiceReportDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ServiceReportSystem.ServiceReportController",
    "Method": "GetServiceReport",
    "RelativePath": "api/ServiceReport/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.ServiceReportSystem.ServiceReportDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ServiceReportSystem.ServiceReportController",
    "Method": "UpdateServiceReport",
    "RelativePath": "api/ServiceReport/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "ControlTower.DTOs.ServiceReportSystem.UpdateServiceReportDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ServiceReportSystem.ServiceReportController",
    "Method": "DeleteServiceReport",
    "RelativePath": "api/ServiceReport/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updatedBy",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ServiceReportSystem.ServiceReportController",
    "Method": "GetDashboardStats",
    "RelativePath": "api/ServiceReport/dashboard-stats",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ControlTower.Controllers.ServiceReportSystem.ServiceReportController",
    "Method": "GetNextJobNumber",
    "RelativePath": "api/ServiceReport/NextJobNumber",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ControlTower.Controllers.ServiceReportSystem.ServiceReportController",
    "Method": "SearchServiceReports",
    "RelativePath": "api/ServiceReport/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "searchField",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "searchValue",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "startDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "endDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ControlTower.DTOs.PagedResult\u00601[[ControlTower.DTOs.ServiceReportSystem.ServiceReportDto, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ServiceReportSystem.Controllers.ServiceTypeWarehouseController",
    "Method": "GetServiceTypeWarehouses",
    "RelativePath": "api/ServiceTypeWarehouse",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.Models.ServiceReportSystem.ServiceTypeWarehouse, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ServiceReportSystem.Controllers.SystemWarehouseController",
    "Method": "GetSystemWarehouses",
    "RelativePath": "api/SystemWarehouse",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ControlTower.Models.ServiceReportSystem.SystemWarehouse, ControlTower, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]